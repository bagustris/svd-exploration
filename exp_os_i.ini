[EXP]
root = ./exp_svd/results/
name = exp_os_i
[DATA]
databases = ['train', 'dev', 'test']
train = ./data/svd/svd_i_n_train.csv
train.type = csv
train.absolute_path = True
train.split_strategy = train
train.audio_path = /data/SaarbrueckenVoiceDatabase/export_16k
dev = ./data/svd/svd_i_n_dev.csv
dev.type = csv
dev.absolute_path = True
dev.split_strategy = train
dev.audio_path = /data/SaarbrueckenVoiceDatabase/export_16k
test = ./data/svd/svd_i_n_test.csv
test.type = csv
test.absolute_path = True
test.split_strategy = test
test.audio_path = /data/SaarbrueckenVoiceDatabase/export_16k
target = label
labels = ['n', 'p']
; no_reuse = True
; labels = ['angry', 'calm', 'sad']
; get the number of classes from the target column automatically
[FEATS]
; type = ['wav2vec2']
; type = ['hubert-large-ll60k']
; type = []
type = ['os']
scale = robust
balancing = smote
; no_reuse = True
; features = ['shimmerLocaldB_sma3nz_amean', 'mfcc2V_sma3nz_amean', 'F0semitoneFrom27.5Hz_sma3nz_pctlrange0-2', 'F3frequency_sma3nz_amean', 'jitterLocal_sma3nz_amean', 'mfcc2_sma3_amean', 'jitterLocal_sma3nz_stddevNorm', 'F2bandwidth_sma3nz_amean', 'mfcc4V_sma3nz_amean', 'MeanVoicedSegmentLengthSec', 'F2amplitudeLogRelF0_sma3nz_stddevNorm', 'shimmerLocaldB_sma3nz_stddevNorm', 'slopeV0-500_sma3nz_amean', 'loudness_sma3_stddevRisingSlope', 'F3bandwidth_sma3nz_amean', 'F0semitoneFrom27.5Hz_sma3nz_meanRisingSlope', 'F3amplitudeLogRelF0_sma3nz_amean', 'F1amplitudeLogRelF0_sma3nz_stddevNorm', 'F2frequency_sma3nz_stddevNorm', 'hammarbergIndexV_sma3nz_stddevNorm', 'F3amplitudeLogRelF0_sma3nz_stddevNorm', 'spectralFluxV_sma3nz_stddevNorm', 'mfcc2V_sma3nz_stddevNorm', 'mfcc1V_sma3nz_amean', 'mfcc1_sma3_stddevNorm', 'F3bandwidth_sma3nz_stddevNorm', 'alphaRatioV_sma3nz_amean', 'mfcc3_sma3_stddevNorm', 'logRelF0-H1-H2_sma3nz_amean', 'mfcc3_sma3_amean', 'F1bandwidth_sma3nz_stddevNorm', 'loudness_sma3_pctlrange0-2', 'loudness_sma3_meanRisingSlope', 'F2bandwidth_sma3nz_stddevNorm', 'F2amplitudeLogRelF0_sma3nz_amean', 'mfcc4_sma3']
[MODEL]
type = xgb
; class_weight = True
; [EXPL]
; model = ['tree']
; max_feats = 88
; feature_distributions = True
; plot_tree = True
; permutation = True
; shap = True
; [AUGMENT]
; augment = ['random_splice']
; ; [PLOT]
; sample_selection = train
; result = exp_svd/augmented_os_a_n.csv
; [PLOT]
; format = svg
; scatter = ['tsne', 'umap', 'pca']